{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "CreateNew<%= @data_volume_name %>": {
      "Fn::Equals": [
        {
          "Ref": "<%= @data_volume_name %>SnapshotId"
        },
        ""
      ]
    }
  },
  "Description": "<%= @stack_description %>",
  "Parameters": {
    "<%= @data_volume_name %>SnapshotId": {
      "Default": "",
      "Description": "Snapshot to create the data volume from (leave empty for new volume)",
      "Type": "String"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "<%= @default_key_name %>",
      "ConstraintDescription": "Must be the name of an existing EC2 Key Pair"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "m1.small", "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
        "c1.medium", "c1.xlarge",
        "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge",
        "g2.2xlarge",
        "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge",
        "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "Must be a valid instance store backed EC2 Instance Type"
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "c1.medium": {
        "Arch": "PV64"
      },
      "c1.xlarge": {
        "Arch": "PV64"
      },
      "c3.2xlarge": {
        "Arch": "HVM64"
      },
      "c3.4xlarge": {
        "Arch": "HVM64"
      },
      "c3.8xlarge": {
        "Arch": "HVM64"
      },
      "c3.large": {
        "Arch": "HVM64"
      },
      "c3.xlarge": {
        "Arch": "HVM64"
      },
      "c4.2xlarge": {
        "Arch": "HVM64"
      },
      "c4.4xlarge": {
        "Arch": "HVM64"
      },
      "c4.8xlarge": {
        "Arch": "HVM64"
      },
      "c4.large": {
        "Arch": "HVM64"
      },
      "c4.xlarge": {
        "Arch": "HVM64"
      },
      "cc2.8xlarge": {
        "Arch": "HVM64"
      },
      "cr1.8xlarge": {
        "Arch": "HVM64"
      },
      "g2.2xlarge": {
        "Arch": "HVMG2"
      },
      "hi1.4xlarge": {
        "Arch": "HVM64"
      },
      "hs1.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.2xlarge": {
        "Arch": "HVM64"
      },
      "i2.4xlarge": {
        "Arch": "HVM64"
      },
      "i2.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.xlarge": {
        "Arch": "HVM64"
      },
      "m1.large": {
        "Arch": "PV64"
      },
      "m1.medium": {
        "Arch": "PV64"
      },
      "m1.small": {
        "Arch": "PV64"
      },
      "m1.xlarge": {
        "Arch": "PV64"
      },
      "m2.2xlarge": {
        "Arch": "PV64"
      },
      "m2.4xlarge": {
        "Arch": "PV64"
      },
      "m2.xlarge": {
        "Arch": "PV64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "r3.2xlarge": {
        "Arch": "HVM64"
      },
      "r3.4xlarge": {
        "Arch": "HVM64"
      },
      "r3.8xlarge": {
        "Arch": "HVM64"
      },
      "r3.large": {
        "Arch": "HVM64"
      },
      "r3.xlarge": {
        "Arch": "HVM64"
      },
      "t1.micro": {
        "Arch": "PV64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      }
    },
    "AWSRegionArch2AMI": <%= @ami_map %>
  },
  "Resources": {
    "<%= @data_volume_name %>": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "Size": {
          "Fn::If": [
            "CreateNew<%= @data_volume_name %>",
            "<%= @data_volume_size %>",
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "SnapshotId": {
          "Fn::If": [
            "CreateNew<%= @data_volume_name %>",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "<%= @data_volume_name %>SnapshotId"
            }
          ]
        },
        "AvailabilityZone": {
          "Fn::Select": [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ]
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "EC2Instance": {
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": <%= "[#{@security_groups.map { |g| "\"#{g}\""}.join(', ') }]" %>,
        "AvailabilityZone": {
          "Fn::Select": [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ]
        },
        "Volumes": [
          {
            "VolumeId": {
              "Ref": "<%= @data_volume_name %>"
            },
            "Device": "/dev/xvdf"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                <%= user_data(@init_script) + ',' if defined?(@init_script) %>
                <%= user_data('chef_bootstrap.sh.erb') %>, "\n",
                "# signal the status from cfn-init\n",
                "cfn-signal -e $?",
                " --stack ", { "Ref" : "AWS::StackName" },
                " --resource EC2Instance",
                " --region ", { "Ref" : "AWS::Region" }, "\n"
              ]
            ]
          }
        }
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "<%= @instance_start_timeout || 'PT10M' %>"
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "Route53RecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": "<%= @dns_record %>",
        "Name": "<%= @dns_record %>",
        "Type": "A",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "EC2Instance",
              "PublicIp"
            ]
          }
        ],
        "TTL": "60"
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Value": {
        "Ref": "EC2Instance"
      }
    },
    "AvailabilityZone": {
      "Description": "Availability Zone",
      "Value": {
        "Fn::Select": [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ]
      }
    },
    "PublicDNS": {
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicDnsName"
        ]
      }
    },
    "PublicIP": {
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance",
          "PublicIp"
        ]
      }
    }
  }
}